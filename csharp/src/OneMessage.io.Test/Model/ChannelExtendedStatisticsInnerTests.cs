/*
 * one_msg_waba_sdk
 *
 * [1MSG.IO](https://1msg.io/) is the perfect WhatsApp management tool for your business. With us you get full access to the official Whatsapp API/webhooks.  Every API request must contain an Authorize HTTP header with a token.  This is your channel token, which can be found in your channel project on your profile page. Please do not give the token to anyone or post it publicly.  The authorization token must be added to each request in the GET parameter 'token' and always passed to query string (?token={your_token}). Parameters in GET queries pass query string. Parameters in POST requests â€” through the JSON-encoded request body.   All 'send' methods (except /sendTemplate) will only work when the dialog session with the user is open. Some of our solutions simplify and avoid such limitations, but we urge you to pay more attention to this detail
 *
 * The version of the OpenAPI document: 2.39.0
 * Contact: hello@1msg.io
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using OneMessage.io.Model;
using OneMessage.io.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace OneMessage.io.Test.Model
{
    /// <summary>
    ///  Class for testing ChannelExtendedStatisticsInner
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class ChannelExtendedStatisticsInnerTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for ChannelExtendedStatisticsInner
        //private ChannelExtendedStatisticsInner instance;

        public ChannelExtendedStatisticsInnerTests()
        {
            // TODO uncomment below to create an instance of ChannelExtendedStatisticsInner
            //instance = new ChannelExtendedStatisticsInner();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of ChannelExtendedStatisticsInner
        /// </summary>
        [Fact]
        public void ChannelExtendedStatisticsInnerInstanceTest()
        {
            // TODO uncomment below to test "IsType" ChannelExtendedStatisticsInner
            //Assert.IsType<ChannelExtendedStatisticsInner>(instance);
        }

        /// <summary>
        /// Test the property 'BusinessInitiatedPaidQuantity'
        /// </summary>
        [Fact]
        public void BusinessInitiatedPaidQuantityTest()
        {
            // TODO unit test for the property 'BusinessInitiatedPaidQuantity'
        }

        /// <summary>
        /// Test the property 'BusinessInitiatedPrice'
        /// </summary>
        [Fact]
        public void BusinessInitiatedPriceTest()
        {
            // TODO unit test for the property 'BusinessInitiatedPrice'
        }

        /// <summary>
        /// Test the property 'BusinessInitiatedQuantity'
        /// </summary>
        [Fact]
        public void BusinessInitiatedQuantityTest()
        {
            // TODO unit test for the property 'BusinessInitiatedQuantity'
        }

        /// <summary>
        /// Test the property 'FreeEntryPoint'
        /// </summary>
        [Fact]
        public void FreeEntryPointTest()
        {
            // TODO unit test for the property 'FreeEntryPoint'
        }

        /// <summary>
        /// Test the property 'FreeQuantity'
        /// </summary>
        [Fact]
        public void FreeQuantityTest()
        {
            // TODO unit test for the property 'FreeQuantity'
        }

        /// <summary>
        /// Test the property 'FreeTier'
        /// </summary>
        [Fact]
        public void FreeTierTest()
        {
            // TODO unit test for the property 'FreeTier'
        }

        /// <summary>
        /// Test the property 'PaidQuantity'
        /// </summary>
        [Fact]
        public void PaidQuantityTest()
        {
            // TODO unit test for the property 'PaidQuantity'
        }

        /// <summary>
        /// Test the property 'PeriodDate'
        /// </summary>
        [Fact]
        public void PeriodDateTest()
        {
            // TODO unit test for the property 'PeriodDate'
        }

        /// <summary>
        /// Test the property 'Quantity'
        /// </summary>
        [Fact]
        public void QuantityTest()
        {
            // TODO unit test for the property 'Quantity'
        }

        /// <summary>
        /// Test the property 'TotalPrice'
        /// </summary>
        [Fact]
        public void TotalPriceTest()
        {
            // TODO unit test for the property 'TotalPrice'
        }

        /// <summary>
        /// Test the property 'UserInitiatedPaidQuantity'
        /// </summary>
        [Fact]
        public void UserInitiatedPaidQuantityTest()
        {
            // TODO unit test for the property 'UserInitiatedPaidQuantity'
        }

        /// <summary>
        /// Test the property 'UserInitiatedPrice'
        /// </summary>
        [Fact]
        public void UserInitiatedPriceTest()
        {
            // TODO unit test for the property 'UserInitiatedPrice'
        }

        /// <summary>
        /// Test the property 'UserInitiatedQuantity'
        /// </summary>
        [Fact]
        public void UserInitiatedQuantityTest()
        {
            // TODO unit test for the property 'UserInitiatedQuantity'
        }
    }
}
