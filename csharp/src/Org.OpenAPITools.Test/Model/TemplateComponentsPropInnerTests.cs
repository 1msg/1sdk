/*
 * one_msg_waba_sdk
 *
 * [1MSG.IO](https://1msg.io/) is the perfect WhatsApp management tool for your business. With us you get full access to the official Whatsapp API/webhooks.  Every API request must contain an Authorize HTTP header with a token.  This is your channel token, which can be found in your channel project on your profile page. Please do not give the token to anyone or post it publicly.  The authorization token must be added to each request in the GET parameter 'token' and always passed to query string (?token={your_token}). Parameters in GET queries pass query string. Parameters in POST requests â€” through the JSON-encoded request body.   All 'send' methods (except /sendTemplate) will only work when the dialog session with the user is open. Some of our solutions simplify and avoid such limitations, but we urge you to pay more attention to this detail
 *
 * The version of the OpenAPI document: 2.39.0
 * Contact: hello@1msg.io
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Org.OpenAPITools.Model;
using Org.OpenAPITools.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Org.OpenAPITools.Test.Model
{
    /// <summary>
    ///  Class for testing TemplateComponentsPropInner
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class TemplateComponentsPropInnerTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for TemplateComponentsPropInner
        //private TemplateComponentsPropInner instance;

        public TemplateComponentsPropInnerTests()
        {
            // TODO uncomment below to create an instance of TemplateComponentsPropInner
            //instance = new TemplateComponentsPropInner();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of TemplateComponentsPropInner
        /// </summary>
        [Fact]
        public void TemplateComponentsPropInnerInstanceTest()
        {
            // TODO uncomment below to test "IsType" TemplateComponentsPropInner
            //Assert.IsType<TemplateComponentsPropInner>(instance);
        }

        /// <summary>
        /// Test the property 'Type'
        /// </summary>
        [Fact]
        public void TypeTest()
        {
            // TODO unit test for the property 'Type'
        }

        /// <summary>
        /// Test the property 'Format'
        /// </summary>
        [Fact]
        public void FormatTest()
        {
            // TODO unit test for the property 'Format'
        }

        /// <summary>
        /// Test the property 'Text'
        /// </summary>
        [Fact]
        public void TextTest()
        {
            // TODO unit test for the property 'Text'
        }

        /// <summary>
        /// Test the property 'Example'
        /// </summary>
        [Fact]
        public void ExampleTest()
        {
            // TODO unit test for the property 'Example'
        }

        /// <summary>
        /// Test the property 'Buttons'
        /// </summary>
        [Fact]
        public void ButtonsTest()
        {
            // TODO unit test for the property 'Buttons'
        }
    }
}
