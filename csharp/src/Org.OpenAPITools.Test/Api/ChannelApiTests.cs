/*
 * one_msg_waba_sdk
 *
 * [1MSG.IO](https://1msg.io/) is the perfect WhatsApp management tool for your business. With us you get full access to the official Whatsapp API/webhooks.  Every API request must contain an Authorize HTTP header with a token.  This is your channel token, which can be found in your channel project on your profile page. Please do not give the token to anyone or post it publicly.  The authorization token must be added to each request in the GET parameter 'token' and always passed to query string (?token={your_token}). Parameters in GET queries pass query string. Parameters in POST requests â€” through the JSON-encoded request body.   All 'send' methods (except /sendTemplate) will only work when the dialog session with the user is open. Some of our solutions simplify and avoid such limitations, but we urge you to pay more attention to this detail
 *
 * The version of the OpenAPI document: 2.39.0
 * Contact: hello@1msg.io
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Org.OpenAPITools.Client;
using Org.OpenAPITools.Api;
// uncomment below to import models
//using Org.OpenAPITools.Model;

namespace Org.OpenAPITools.Test.Api
{
    /// <summary>
    ///  Class for testing ChannelApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class ChannelApiTests : IDisposable
    {
        private ChannelApi instance;

        public ChannelApiTests()
        {
            instance = new ChannelApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of ChannelApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' ChannelApi
            //Assert.IsType<ChannelApi>(instance);
        }

        /// <summary>
        /// Test GetCommerce
        /// </summary>
        [Fact]
        public void GetCommerceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetCommerce();
            //Assert.IsType<GetCommerce>(response);
        }

        /// <summary>
        /// Test GetExtendedStatistics
        /// </summary>
        [Fact]
        public void GetExtendedStatisticsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetExtendedStatistics();
            //Assert.IsType<ChannelExtendedStatistics>(response);
        }

        /// <summary>
        /// Test GetMe
        /// </summary>
        [Fact]
        public void GetMeTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetMe();
            //Assert.IsType<GetMe>(response);
        }

        /// <summary>
        /// Test GetSettings
        /// </summary>
        [Fact]
        public void GetSettingsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetSettings();
            //Assert.IsType<Settings>(response);
        }

        /// <summary>
        /// Test GetStatistics
        /// </summary>
        [Fact]
        public void GetStatisticsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string? date = null;
            //var response = instance.GetStatistics(date);
            //Assert.IsType<ChannelStatistics>(response);
        }

        /// <summary>
        /// Test GetStatus
        /// </summary>
        [Fact]
        public void GetStatusTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetStatus();
            //Assert.IsType<ChannelStatus>(response);
        }

        /// <summary>
        /// Test OutputIP
        /// </summary>
        [Fact]
        public void OutputIPTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.OutputIP();
            //Assert.IsType<GetIP>(response);
        }

        /// <summary>
        /// Test SetMe
        /// </summary>
        [Fact]
        public void SetMeTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //SetMeRequest setMeRequest = null;
            //var response = instance.SetMe(setMeRequest);
            //Assert.IsType<SetMe>(response);
        }

        /// <summary>
        /// Test SetSettings
        /// </summary>
        [Fact]
        public void SetSettingsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Settings settings = null;
            //var response = instance.SetSettings(settings);
            //Assert.IsType<SetSettings200Response>(response);
        }
    }
}
