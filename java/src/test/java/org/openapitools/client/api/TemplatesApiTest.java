/*
 * one_msg_waba_sdk
 * [1MSG.IO](https://1msg.io/) is the perfect WhatsApp management tool for your business. With us you get full access to the official Whatsapp API/webhooks.  Every API request must contain an Authorize HTTP header with a token.  This is your channel token, which can be found in your channel project on your profile page. Please do not give the token to anyone or post it publicly.  The authorization token must be added to each request in the GET parameter 'token' and always passed to query string (?token={your_token}). Parameters in GET queries pass query string. Parameters in POST requests â€” through the JSON-encoded request body.   All 'send' methods (except /sendTemplate) will only work when the dialog session with the user is open. Some of our solutions simplify and avoid such limitations, but we urge you to pay more attention to this detail
 *
 * The version of the OpenAPI document: 2.39.0
 * Contact: hello@1msg.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.AddTemplateRequest;
import org.openapitools.client.model.GetMe401Response;
import org.openapitools.client.model.GetTemplates;
import org.openapitools.client.model.RemoveTemplateRequest;
import org.openapitools.client.model.SendMessageStatus;
import org.openapitools.client.model.SendTemplateRequest;
import org.openapitools.client.model.SetMe;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TemplatesApi
 */
@Disabled
public class TemplatesApiTest {

    private final TemplatesApi api = new TemplatesApi();

    /**
     * Create template
     *
     * Create new template for sending.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addTemplateTest() throws ApiException {
        AddTemplateRequest addTemplateRequest = null;
        Object response = api.addTemplate(addTemplateRequest);
        // TODO: test validations
    }

    /**
     * Remove template
     *
     * Deleted template can not be restored.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void removeTemplateTest() throws ApiException {
        RemoveTemplateRequest removeTemplateRequest = null;
        SetMe response = api.removeTemplate(removeTemplateRequest);
        // TODO: test validations
    }

    /**
     * Send Template Message
     *
     * Send Template Message to a new or existing chat. Only one of two parameters is needed to determine the destination - chatId or phone.  Example:  {\&quot;template\&quot;:\&quot;template_name\&quot;,\&quot;language\&quot;:{\&quot;policy\&quot;:\&quot;deterministic\&quot;,\&quot;code\&quot;:\&quot;en\&quot;},\&quot;namespace\&quot;:\&quot;namespace_id\&quot;,\&quot;params\&quot;:[{\&quot;type\&quot;:\&quot;header\&quot;,\&quot;parameters\&quot;:[{\&quot;type\&quot;:\&quot;image\&quot;,\&quot;image\&quot;: {\&quot;link\&quot;:\&quot;https://...\&quot;}}]},{\&quot;type\&quot;:\&quot;body\&quot;,\&quot;parameters\&quot;:[{\&quot;type\&quot;:\&quot;text\&quot;,\&quot;text\&quot;:\&quot;test\&quot;}]}],\&quot;phone\&quot;:\&quot;556123122026\&quot;}
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void sendTemplateTest() throws ApiException {
        SendTemplateRequest sendTemplateRequest = null;
        SendMessageStatus response = api.sendTemplate(sendTemplateRequest);
        // TODO: test validations
    }

    /**
     * Get templates list
     *
     * 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void templatesListTest() throws ApiException {
        GetTemplates response = api.templatesList();
        // TODO: test validations
    }

}
