/* tslint:disable */
/* eslint-disable */
/**
 * one_msg_waba_sdk
 * [1MSG.IO](https://1msg.io/) is the perfect WhatsApp management tool for your business. With us you get full access to the official Whatsapp API/webhooks.  Every API request must contain an Authorize HTTP header with a token.  This is your channel token, which can be found in your channel project on your profile page. Please do not give the token to anyone or post it publicly.  The authorization token must be added to each request in the GET parameter \'token\' and always passed to query string (?token={your_token}). Parameters in GET queries pass query string. Parameters in POST requests â€” through the JSON-encoded request body.   All \'send\' methods (except /sendTemplate) will only work when the dialog session with the user is open. Some of our solutions simplify and avoid such limitations, but we urge you to pay more attention to this detail
 *
 * The version of the OpenAPI document: 2.39.0
 * Contact: hello@1msg.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { SendProductRequestAllOfActionSections } from './SendProductRequestAllOfActionSections';
import {
    SendProductRequestAllOfActionSectionsFromJSON,
    SendProductRequestAllOfActionSectionsFromJSONTyped,
    SendProductRequestAllOfActionSectionsToJSON,
} from './SendProductRequestAllOfActionSections';

/**
 * Object containing info about product or catalog. Can contain the following fields:
 * 
 * **catalog_id** - id of catalog
 * 
 * **product_retailer_id** - id of product. Only for sending single product.
 * 
 * **sections** - used for sending multiply products. It`s array containing objects with catalog info. See example below.
 * 
 * Example: {"catalog_id":"{{catalog_id}}","sections":[{"title":"the-section-title","product_items":[{"product_retailer_id":"{{SKU-1}}"},{"product_retailer_id":"{{SKU-2}}"}]},{"title":"the-section-title2","product_items":[{"product_retailer_id":"{{SKU-1}}"}]}]}
 * @export
 * @interface SendProductRequestAllOfAction
 */
export interface SendProductRequestAllOfAction {
    /**
     * id of the catalog
     * @type {string}
     * @memberof SendProductRequestAllOfAction
     */
    catalogId?: string;
    /**
     * id of the product
     * @type {string}
     * @memberof SendProductRequestAllOfAction
     */
    productRetailerId?: string;
    /**
     * 
     * @type {Array<SendProductRequestAllOfActionSections>}
     * @memberof SendProductRequestAllOfAction
     */
    sections?: Array<SendProductRequestAllOfActionSections>;
}

/**
 * Check if a given object implements the SendProductRequestAllOfAction interface.
 */
export function instanceOfSendProductRequestAllOfAction(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function SendProductRequestAllOfActionFromJSON(json: any): SendProductRequestAllOfAction {
    return SendProductRequestAllOfActionFromJSONTyped(json, false);
}

export function SendProductRequestAllOfActionFromJSONTyped(json: any, ignoreDiscriminator: boolean): SendProductRequestAllOfAction {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'catalogId': !exists(json, 'catalog_id') ? undefined : json['catalog_id'],
        'productRetailerId': !exists(json, 'product_retailer_id') ? undefined : json['product_retailer_id'],
        'sections': !exists(json, 'sections') ? undefined : ((json['sections'] as Array<any>).map(SendProductRequestAllOfActionSectionsFromJSON)),
    };
}

export function SendProductRequestAllOfActionToJSON(value?: SendProductRequestAllOfAction | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'catalog_id': value.catalogId,
        'product_retailer_id': value.productRetailerId,
        'sections': value.sections === undefined ? undefined : ((value.sections as Array<any>).map(SendProductRequestAllOfActionSectionsToJSON)),
    };
}

