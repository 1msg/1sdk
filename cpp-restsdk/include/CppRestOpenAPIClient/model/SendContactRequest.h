/**
 * one_msg_waba_sdk
 * [1MSG.IO](https://1msg.io/) is the perfect WhatsApp management tool for your business. With us you get full access to the official Whatsapp API/webhooks.  Every API request must contain an Authorize HTTP header with a token.  This is your channel token, which can be found in your channel project on your profile page. Please do not give the token to anyone or post it publicly.  The authorization token must be added to each request in the GET parameter 'token' and always passed to query string (?token={your_token}). Parameters in GET queries pass query string. Parameters in POST requests â€” through the JSON-encoded request body.   All 'send' methods (except /sendTemplate) will only work when the dialog session with the user is open. Some of our solutions simplify and avoid such limitations, but we urge you to pay more attention to this detail
 *
 * The version of the OpenAPI document: 2.39.0
 * Contact: hello@1msg.io
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.0.1.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * SendContactRequest.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_SendContactRequest_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_SendContactRequest_H_


#include "CppRestOpenAPIClient/ModelBase.h"

#include <cpprest/details/basic_types.h>
#include "CppRestOpenAPIClient/Object.h"
#include <vector>

namespace org {
namespace openapitools {
namespace client {
namespace model {


/// <summary>
/// 
/// </summary>
class  SendContactRequest
    : public ModelBase
{
public:
    SendContactRequest();
    virtual ~SendContactRequest();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// SendContactRequest members

    /// <summary>
    /// **Required if phone is not set**  Chat ID from the message list. Examples: 12020721369@c.us . Used instead of the phone parameter.
    /// </summary>
    utility::string_t getChatId() const;
    bool chatIdIsSet() const;
    void unsetChatId();

    void setChatId(const utility::string_t& value);

    /// <summary>
    /// **Required if chatId is not set**  A phone number starting with the country code. You do not need to add your number.   USA example: 12020721369.
    /// </summary>
    int32_t getPhone() const;
    bool phoneIsSet() const;
    void unsetPhone();

    void setPhone(int32_t value);

    /// <summary>
    /// Array containing contact objects.  Contact object parameters:  **name** - full contact name. Required. Object with properties:  * formatted_name - Full name, as it normally appears. Example: Lord Adam John Smith Junior. You have to use at least one additional parameter (first_name, last_name, middle_name, suffix, prefix)  * first_name - First name. Example: Adam  * last_name - Last name. Example: Smith  * middle_name - Middle name. Example: John  * suffix - Name suffix. Example: Junior  * prefix - Name prefix. Example: Lord  **birthday** - YYYY-MM-DD formatted string. Example: 2012-08-18  **addresses** - array containing address objects with parameters:  * street - Street number and name. Example: 1 Hacker Way  * city - City name. Example: Menlo Park  * state - State abbreviation. Example: CA  * zip - ZIP code. Example: 94025  * country - Full country name. Example: United States  * country_code - Two-letter country abbreviation. Example: us  * type - Standard Values: HOME, WORK. Example: HOME  **emails** - array containing email objects with parameters:  * email - Email address. Example: test@fb.com  * type - Standard Values: HOME, WORK. Example: WORK  **org** - object containing parameters:  * company - Name of the contact&#39;s company. Example: WhatsApp  * department - Name of the contact&#39;s department. Example: Design  * title - Contact&#39;s business title. Example: Manager  **phones** - array containing phone objects with parameters:  * phone - Automatically populated with the wa_id value as a formatted phone number. Example: +1 (940) 555-1234  * type - Standard Values: CELL, MAIN, IPHONE, HOME, WORK. Example: HOME  * wa_id - WhatsApp ID. Example: 19405551234  **urls** - array containing url objects with parameters:  * url - URL. Example: https://www.facebook.com  * type - Standard Values: HOME, WORK. Example: WORK  Example: [{\&quot;addresses\&quot;:[{\&quot;city\&quot;:\&quot;Menlo Park\&quot;,\&quot;country\&quot;:\&quot;United States\&quot;,\&quot;country_code\&quot;:\&quot;us\&quot;,\&quot;state\&quot;:\&quot;CA\&quot;,\&quot;street\&quot;:\&quot;1 Hacker Way\&quot;,\&quot;type\&quot;:\&quot;HOME\&quot;,\&quot;zip\&quot;:\&quot;94025\&quot;},{\&quot;city\&quot;:\&quot;Menlo Park\&quot;,\&quot;country\&quot;:\&quot;United States\&quot;,\&quot;country_code\&quot;:\&quot;us\&quot;,\&quot;state\&quot;:\&quot;CA\&quot;,\&quot;street\&quot;:\&quot;200 Jefferson Dr\&quot;,\&quot;type\&quot;:\&quot;WORK\&quot;,\&quot;zip\&quot;:\&quot;94025\&quot;}],\&quot;birthday\&quot;:\&quot;2012-08-18\&quot;,\&quot;emails\&quot;:[{\&quot;email\&quot;:\&quot;test@fb.com\&quot;,\&quot;type\&quot;:\&quot;WORK\&quot;},{\&quot;email\&quot;:\&quot;test@whatsapp.com\&quot;,\&quot;type\&quot;:\&quot;WORK\&quot;}],\&quot;name\&quot;:{\&quot;first_name\&quot;:\&quot;John\&quot;,\&quot;formatted_name\&quot;:\&quot;John Smith\&quot;,\&quot;last_name\&quot;:\&quot;Smith\&quot;},\&quot;org\&quot;:{\&quot;company\&quot;:\&quot;WhatsApp\&quot;,\&quot;department\&quot;:\&quot;Design\&quot;,\&quot;title\&quot;:\&quot;Manager\&quot;},\&quot;phones\&quot;:[{\&quot;phone\&quot;:\&quot;+1 (940) 555-1234\&quot;,\&quot;type\&quot;:\&quot;HOME\&quot;},{\&quot;phone\&quot;:\&quot;+1 (650) 555-1234\&quot;,\&quot;type\&quot;:\&quot;WORK\&quot;,\&quot;wa_id\&quot;:\&quot;16505551234\&quot;}],\&quot;urls\&quot;:[{\&quot;url\&quot;:\&quot;https://www.facebook.com\&quot;,\&quot;type\&quot;:\&quot;WORK\&quot;}]}]
    /// </summary>
    std::vector<std::shared_ptr<Object>>& getContacts();
    bool contactsIsSet() const;
    void unsetContacts();

    void setContacts(const std::vector<std::shared_ptr<Object>>& value);


protected:
    utility::string_t m_ChatId;
    bool m_ChatIdIsSet;
    int32_t m_Phone;
    bool m_PhoneIsSet;
    std::vector<std::shared_ptr<Object>> m_Contacts;
    bool m_ContactsIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_SendContactRequest_H_ */
