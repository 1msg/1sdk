/**
 * one_msg_waba_sdk
 * [1MSG.IO](https://1msg.io/) is the perfect WhatsApp management tool for your business. With us you get full access to the official Whatsapp API/webhooks.  Every API request must contain an Authorize HTTP header with a token.  This is your channel token, which can be found in your channel project on your profile page. Please do not give the token to anyone or post it publicly.  The authorization token must be added to each request in the GET parameter 'token' and always passed to query string (?token={your_token}). Parameters in GET queries pass query string. Parameters in POST requests â€” through the JSON-encoded request body.   All 'send' methods (except /sendTemplate) will only work when the dialog session with the user is open. Some of our solutions simplify and avoid such limitations, but we urge you to pay more attention to this detail
 *
 * The version of the OpenAPI document: 2.39.0
 * Contact: hello@1msg.io
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.0.1.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * ChannelApi.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_API_ChannelApi_H_
#define ORG_OPENAPITOOLS_CLIENT_API_ChannelApi_H_



#include "CppRestOpenAPIClient/ApiClient.h"

#include "CppRestOpenAPIClient/model/ChannelExtendedStatistics.h"
#include "CppRestOpenAPIClient/model/ChannelStatistics.h"
#include "CppRestOpenAPIClient/model/ChannelStatus.h"
#include "CppRestOpenAPIClient/model/GetCommerce.h"
#include "CppRestOpenAPIClient/model/GetIP.h"
#include "CppRestOpenAPIClient/model/GetMe.h"
#include "CppRestOpenAPIClient/model/GetMe_401_response.h"
#include "CppRestOpenAPIClient/model/SetMe.h"
#include "CppRestOpenAPIClient/model/SetMeRequest.h"
#include "CppRestOpenAPIClient/model/SetSettings_200_response.h"
#include "CppRestOpenAPIClient/model/Settings.h"
#include <cpprest/details/basic_types.h>
#include <boost/optional.hpp>

namespace org {
namespace openapitools {
namespace client {
namespace api {

using namespace org::openapitools::client::model;



class  ChannelApi 
{
public:

    explicit ChannelApi( std::shared_ptr<const ApiClient> apiClient );

    virtual ~ChannelApi();

    /// <summary>
    /// Get Commerce Settings
    /// </summary>
    /// <remarks>
    /// **is_catalog_visible** - Set to true to show catalog storefront icon or false to hide it. **is_cart_enabled** - Set to true to enable cart or false to disable it.
    /// </remarks>
    pplx::task<std::shared_ptr<GetCommerce>> getCommerce(
    ) const;
    /// <summary>
    /// Get Extended Channel statistics
    /// </summary>
    /// <remarks>
    /// Get channel usage extended statistics
    /// </remarks>
    pplx::task<std::shared_ptr<ChannelExtendedStatistics>> getExtendedStatistics(
    ) const;
    /// <summary>
    /// Get Profile Info
    /// </summary>
    /// <remarks>
    /// Use this edge to retrieve your profile&#39;s About info
    /// </remarks>
    pplx::task<std::shared_ptr<GetMe>> getMe(
    ) const;
    /// <summary>
    /// Get Settings
    /// </summary>
    /// <remarks>
    /// **webhookUrl** - Http or https URL for receiving notifications.
    /// </remarks>
    pplx::task<std::shared_ptr<Settings>> getSettings(
    ) const;
    /// <summary>
    /// Get Channel statistics
    /// </summary>
    /// <remarks>
    /// Get channel usage statistics
    /// </remarks>
    /// <param name="date">Month and year in format mm.YYYY. (optional, default to utility::conversions::to_string_t(&quot;&quot;))</param>
    pplx::task<std::shared_ptr<ChannelStatistics>> getStatistics(
        boost::optional<utility::string_t> date
    ) const;
    /// <summary>
    ///  Get Status
    /// </summary>
    /// <remarks>
    /// Returns the status of your WhatsApp Business API client. Channel statuses:  **connected**_/_**connecting** - everything is ok.  **disconnected** - The Coreapp is not connected to the WhatsApp servers.  **uninitialized** - The application could be in the process of upgrading or initializing the database schema. Try again in a few minutes and contact Support if you continue to see this status.  **unregistered** - You need to register your WhatsApp Business API client. Either you have been blocked and need to take some action (contact Support)
    /// </remarks>
    pplx::task<std::shared_ptr<ChannelStatus>> getStatus(
    ) const;
    /// <summary>
    /// Get channel server IP
    /// </summary>
    /// <remarks>
    /// 
    /// </remarks>
    pplx::task<std::shared_ptr<GetIP>> outputIP(
    ) const;
    /// <summary>
    /// Change user info
    /// </summary>
    /// <remarks>
    /// Change user info
    /// </remarks>
    /// <param name="setMeRequest"></param>
    pplx::task<std::shared_ptr<SetMe>> setMe(
        std::shared_ptr<SetMeRequest> setMeRequest
    ) const;
    /// <summary>
    /// Set settings
    /// </summary>
    /// <remarks>
    /// **webhookUrl** - Http or https URL for receiving notifications.
    /// </remarks>
    /// <param name="settings"></param>
    pplx::task<std::shared_ptr<SetSettings_200_response>> setSettings(
        std::shared_ptr<Settings> settings
    ) const;

protected:
    std::shared_ptr<const ApiClient> m_ApiClient;
};

}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_API_ChannelApi_H_ */

